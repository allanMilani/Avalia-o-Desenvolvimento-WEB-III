// <auto-generated />
using System;
using Aula_03.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aula_03.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211002164011_add_numero_de_paginas_livro")]
    partial class add_numero_de_paginas_livro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aula_03.Models.ClassificacaoLivro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.ToTable("TBClassificacaoLivro");
                });

            modelBuilder.Entity("Aula_03.Models.Editora", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeEditora")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.ToTable("TBEditora");
                });

            modelBuilder.Entity("Aula_03.Models.Livro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcessoOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("ClassificacaoLivroID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EditoraID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("NumeroPagina")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("ClassificacaoLivroID");

                    b.HasIndex("EditoraID");

                    b.ToTable("TBLivro");
                });

            modelBuilder.Entity("Aula_03.Models.Livro", b =>
                {
                    b.HasOne("Aula_03.Models.ClassificacaoLivro", "ClassificacaoLivro")
                        .WithMany()
                        .HasForeignKey("ClassificacaoLivroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aula_03.Models.Editora", "Editora")
                        .WithMany()
                        .HasForeignKey("EditoraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassificacaoLivro");

                    b.Navigation("Editora");
                });
#pragma warning restore 612, 618
        }
    }
}
